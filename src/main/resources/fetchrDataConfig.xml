<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016.  Noubug Source Technologies All rights reserved.
  ~ Any redistribution or reproduction of part or all of the contents in any form
  ~ is prohibited other than the following:
  ~ You may print or download to a local disk for use for the purpose of recruiting our team
  ~ (Noubug) for any project  You may not, except with our express written permission, distribute or
  ~ commercially exploit the contents  You may not share ideas contained in this proposal document with rival
  ~ parties without our express permission. Copyright and other intellectual property laws protect these
  ~ materials. Reproduction or retransmission of  the materials, in whole or in part, in any manner, without our
  ~ prior written consent is  a violation of copyright law.  Individuals must preserve any copyright or other
  ~ notices contained in or associated with them.  Users may not distribute such copies to others, whether or
  ~ not in electronic form, whether or not for a change or other consideration, without prior written consent of
  ~ the copyright holder of the materials. Contact information for requests for permission to reproduce,
  ~ distribute or use contents herein is stated here: info@noubug.com
  -->

<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<!-- Attention: Generated code! Do not modify by hand! Generated by: hibernate.cfg.xml.vsl
	in andromda-hibernate-cartridge. -->
<hibernate-configuration>
    <session-factory>
        <!-- properties -->
        <!--<property name="connection.datasource">java:/jdbc/postume</property> -->
        <!--Connection For SQl Server -->
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="connection.url">jdbc:mysql://localhost:3306/sso</property>
        <property name="connection.username">root</property>
        <property name="connection.password">success20</property>
        <property name="dialect">org.hibernate.dialect.MySQLDialect</property>
        <property name="hbm2ddl.auto">update</property>
        <!-- Bind the getCurrentSession() method to the thread. -->
        <property name="current_session_context_class">thread</property>
        <!-- configuration pool via c3p0 -->
        <property name="c3p0.acquire_increment">3</property> <!-- Determines how many connections at a time c3p0 will try to acquire when
			the pool is exhausted. -->
        <property name="c3p0.idle_test_period">100</property> <!-- seconds -->
        <property name="c3p0.max_size">100</property>
        <property name="c3p0.max_statements">50</property> <!--The size of c3p0's PreparedStatement cache. Zero means statement caching
			is turned off. -->
        <property name="c3p0.min_size">10</property>
        <property name="c3p0.timeout">120</property> <!-- seconds --> <!-- The seconds a Connection can remain pooled but unused before being discarded.
			Zero means idle connections never expire. -->
        <!--<property name="jta.UserTransaction">UserTransaction</property> <property
            name="transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</property>
            <property name="transaction.manager_lookup_class">org.hibernate.transaction.JBossTransactionManagerLookup</property>
            <property name="session_factory_name">java:/hibernate/SessionFactory</property> -->
        <property name="show_sql">false</property>
        <property name="jdbc.batch_size">0</property>
        <property name="hibernate.query.factory_class">
            org.hibernate.hql.internal.classic.ClassicQueryTranslatorFactory
        </property>
        <!--<property name="hibernate.query.factory_class">org.hibernate.hql.classic.ClassicQueryTranslatorFactory
        </property>-->
        <property name="hibernate.cache.use_query_cache">false</property>
        <property name="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</property>
        <property name="hibernate.cache.query_cache_factory">org.hibernate.cache.StandardQueryCacheFactory</property>

        <!-- <property name="hibernate.query.substitutions">'true'=true, 'false'=false, rand()=random()</property>-->

        <!-- mapping files -->
        <!-- mapping files -->
        <mapping resource="us/fetchr/audittrail/AuditTrail.hbm.xml"/>
        <mapping resource="us/fetchr/cpsso/entities/Student.hbm.xml"/>
        <mapping resource="us/fetchr/cpsso/entities/Staff.hbm.xml"/>
        <mapping resource="us/fetchr/cpsso/entities/TimeLinePost.hbm.xml"/>
        <mapping resource="us/fetchr/cpsso/entities/StudentToCourseMapper.hbm.xml"/>
        <mapping resource="us/fetchr/cpsso/entities/CourseOfStudy.hbm.xml"/>
        <mapping resource="us/fetchr/cpsso/entities/StudentToTimelinePostMapper.hbm.xml"/>
        <!-- Event listeners for indexing in lucene + hibernate-search -->
    </session-factory>
</hibernate-configuration>